DOKUMENTACJA PROJEKTOWA

Systemy Operacyjne 
PS6
Projekt 2
Temat projektu: Problem śpiącego fryzjera

Projekt zrealizowali:
1. Patryk Wójtowicz
2. Magda Zaborowska

Zostały wykonane obie wersje programu, a więc:
- bez wykorzystania zmiennych warunkowych (tylko mutexy/semafory)
- wykorzystując zmienne warunkowe (condition variables)

Czytanie informacji z terminalu:

Res:5 WRomm: 6/20 [in: 7]

Res:5 WRomm: 6/20 [in: 7] - START <- Rozpoczęcie strzyżenia przez fryzjera.
Res:5 WRomm: 6/20 [in: 7] - END <- Koniec strzyżenia przez fryzjera.
Res:5 WRomm: 6/20 [in: 7] - Client get a chair! <- Zajęcie fotelu w poczekalni przez klienta.
Res:5 WRomm: 6/20 [in: 7] - Client didn't get a chair! <- Klient rezygnuje, poczekalnia jest cała zajęta.

Res - liczba osób, które nie dostały się do poczekalni (poczekalnia była pełna)
WRomm - liczba osób znajdujących się w poczekalni na liczbę dostępnych miejsc w poczekalni
in - numer klienta, który w danej chwili obłsługiwany jest przez fryzjera (wartość -1 oznacza brak klienta)

Nazwy programów:
./Hairdresser_CV
./Hairdresser_MS

Sposób uruchomienia:
./Hairdresser_CV -c 20 -s 40 -t 5 -f 2 -d

Analogicznie w przypadku ./Hairdresser_MS

Wszystkie parametry są opcjonalne. Gdy użytkownik nie poda wartości, wczytane zostaną domyślne.

Oznaczenia:
-c - liczba klientów (wątków klienta), którzy będą chcieli przyjść do fryzjera
-s - liczba dostępnych miejsc w poczekalni
-t - losowy czas, w którym pojawi się klient (zakres od 1 sek do wartości podanej przez argument)
-f - losowy czas, w którym swoją pracę wykonywać będzie fryzjer (zakres od 1 sek do wartości podanej przez argument
-d - opcja umożliwiająca na wypisywanie na standardowe wyjście dodatkowo listy klientów czekających w poczekalni i listy klientów, którzy nie dostali się do fryzjera z powodu braku miejsc w poczekalni

Synchronizacja:

pthread_cond_wait <- Synchronizacja pomiędzy wątkami w Hairdresser_CV
sem_wait <- Synchronizacja oi==pomiędzy wątkami w Hairdresser_MS